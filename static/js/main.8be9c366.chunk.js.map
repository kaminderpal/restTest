{"version":3,"sources":["Header/Header.module.css","Main/Main.module.css","App.module.css","Header/Header.js","Datatable/Row.js","Utils/constants.js","Utils/helpers.js","Datatable/Datatable.js","Utils/useFetch.js","Main/Main.js","App.js","index.js","Datatable/Datatable.module.css"],"names":["module","exports","Header","title","className","styles","root","Row","date","company","amount","account","months","getDate","formatedDate","Date","getMonth","getFullYear","Datatable","data","transactions","table","reduce","total","curr","Number","Amount","toFixed","tbody","map","transaction","i","Ledger","Company","useFetch","initialState","isFetching","useRef","useState","setData","getData","useCallback","page","current","useEffect","a","isLoading","fetch","response","json","result","error","fetchData","Main","setTransactions","maxPage","setMaxPage","Math","ceil","totalCount","length","t","main","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8be9c366.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__23iUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2m6w7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React from 'react';\nimport styles from './Header.module.css';\n\nconst Header = ({ title }) => {\n  return <div className={styles.root}>{title}</div>;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Row = ({ date, company, amount, account }) => {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{company}</td>\n      <td>{account}</td>\n      <td>{amount}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n","export const BASE_TRANSACTION_URL = 'https://resttest.bench.co/transactions';\nexport const months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'June',\n  'July',\n  'Aug',\n  'Sept',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n","import { months } from './constants';\n\n/**\n * Get Formatted Date in Month Day, YYYY\n * @param {string} date - date string\n */\nexport const getDate = (date) => {\n  const formatedDate = new Date(date);\n  return `${\n    months[formatedDate.getMonth()]\n  } ${formatedDate.getDate()}, ${formatedDate.getFullYear()}`;\n};\n/**\n * Get Total Amount of all transactions\n * @param {Array} data - array of transactions\n */\nexport const getTotalAmount = (data) => {\n  return data\n    .reduce((total, curr) => {\n      return total + Number(curr.Amount);\n    }, 0)\n    .toFixed(2);\n};\n","import React from 'react';\nimport styles from './Datatable.module.css';\nimport Row from './Row';\nimport { getDate, getTotalAmount } from '../Utils/helpers';\n\nconst Datatable = ({ transactions }) => {\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Company</th>\n          <th>Account</th>\n          <th>{`$${getTotalAmount(transactions)}`}</th>\n        </tr>\n      </thead>\n      <tbody className={styles.tbody}>\n        {transactions.map((transaction, i) => (\n          <Row\n            key={i}\n            date={getDate(transaction.Date)}\n            amount={transaction.Amount}\n            account={transaction.Ledger}\n            company={transaction.Company}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Datatable;\n","/**\n * Custom hook to fetch data from server\n * GetData fn will return data based on page number.\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { BASE_TRANSACTION_URL } from './constants';\n\nconst useFetch = (initialState) => {\n  const isFetching = useRef(true);\n  const [data, setData] = useState(initialState);\n\n  const getData = useCallback(\n    (page) => {\n      setData({ ...initialState, page });\n      isFetching.current = true;\n    },\n    [initialState]\n  );\n\n  useEffect(() => {\n    if (isFetching.current) {\n      isFetching.current = false;\n      const fetchData = async () => {\n        try {\n          setData({ ...data, isLoading: true });\n          const response = await fetch(\n            `${BASE_TRANSACTION_URL}/${data.page}.json`\n          );\n          const result = await response.json();\n          setData({ ...data, result, isLoading: false });\n        } catch (error) {\n          setData({ ...data, result: null, isLoading: false, error });\n        }\n      };\n      fetchData();\n    }\n  }, [isFetching, data]);\n\n  return { data, getData };\n};\n\nexport default useFetch;\n","import React, { useState, useEffect } from 'react';\nimport Datatable from '../Datatable';\nimport styles from './Main.module.css';\nimport useFetch from '../Utils/useFetch';\n\nconst Main = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [maxPage, setMaxPage] = useState(0);\n\n  /**\n   * Fetch hook to get data from server.\n   */\n  const { data, getData } = useFetch({\n    result: null,\n    isLoading: false,\n    error: false,\n    page: 1,\n  });\n\n  /**\n   * Effect that will setup the maxpage\n   * MaxPage means no. of times we gonna make fetch call.\n   */\n  useEffect(() => {\n    if (data.result && data.page === 1) {\n      setMaxPage(\n        Math.ceil(data.result.totalCount / data.result.transactions.length)\n      );\n    }\n  }, [data.result, data.page]);\n\n  /**\n   * Effect that will set up the transactions in the array.\n   */\n  useEffect(() => {\n    if (data.result) {\n      setTransactions((t) => [...t, ...data.result.transactions]);\n    }\n  }, [data.result]);\n\n  /**\n   * Effect that will help to get data from server with different page.\n   */\n  useEffect(() => {\n    if (data.result && data.page < maxPage) {\n      getData(data.page + 1);\n    }\n  }, [data.result, maxPage, data.page, getData]);\n\n  return (\n    <div className={styles.main}>\n      {data.isLoading && 'Transactions are loading...'}\n      {data.error && 'Error Occurred while loading the transactions'}\n      {transactions.length > 0 && <Datatable transactions={transactions} />}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport styles from './App.module.css';\n\nconst App = () => {\n  return (\n    <div className={styles.container}>\n      <Header title=\"Bench Test\" />\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Datatable_table__1rnHz\",\"tbody\":\"Datatable_tbody__3M1NI\"};"],"sourceRoot":""}